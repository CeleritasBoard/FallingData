name: Deploy to Staging after CI Testing

on:
  workflow_run:
    workflows: ["CI Testing"]
    types:
      - completed

jobs:
  deploy-supabase:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: https://staging.celeritas-board.hu
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
    permissions:
      actions: read
    steps:
      - name: "Download artifact"
        uses: actions/download-artifact@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
          name: info-pack
      - run: unzip info-pack.zip
      - id: get-info
        run: |
          REF=$(cat info-pack/REF)
          echo "REF=$REF" >> $GITHUB_OUTPUT
          REPO=$(cat info-pack/REPO)
          echo "REPO=$REPO" >> $GITHUB_OUTPUT
          echo REF
          echo REPO
      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.get-info.outputs.REF }}
          repository: ${{ steps.get-info.outputs.REPO }}
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - run: supabase link --project-ref $PROJECT_ID
      - run: supabase db push

  deploy-api:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: https://staging.celeritas-board.hu
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_API_PROJECT_ID }}
    needs: deploy-supabase
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
