name: Deploy to Staging after CI Testing

on:
  pull_request:
    types: [closed]

jobs:
  deploy-supabase:
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment:
      name: Prod-Supabase
      url: https://staging.celeritas-board.hu
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
    permissions:
      actions: read
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - run: supabase link --project-ref $PROJECT_ID
      - run: supabase db push

  deploy-apps:
    #if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [Api, Houston]
    environment: ${{ matrix.environment }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    needs: deploy-supabase
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Dump vars context
        env:
          VARS_JSON: ${{ toJSON(vars) }}
        run: echo "${VARS_JSON}"
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }} --cwd ${{ vars.PROJECT_DIR }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }} --cwd ${{ vars.PROJECT_DIR }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --cwd ${{ vars.PROJECT_DIR }}
